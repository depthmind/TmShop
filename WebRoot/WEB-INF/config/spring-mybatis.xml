<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"  
       xsi:schemaLocation="
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- 启动 注解方式 自动装载 -->
    <context:annotation-config />
	<!-- 激活annotation功能 -->
	<context:spring-configured/>
	<!-- 只要注解为启动事务的方法才有事务
    <tx:annotation-driven /> -->
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
	<!-- 不扫描带有@Controller注解的类。因为这些类已经随容器启动时，在servlet-context中扫描过一遍了 -->
	<context:component-scan base-package="com.tourmade">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- <bean id="paginationInterceptor" class="com.tourmade.crm.common.pagination.PaginationInterceptor"></bean> -->
	
	<!-- spring配置duid数据库连接池的数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		<!-- 基本属性 url、user、password127.0.0.1 -->
		<property name="url" value="jdbc:mysql://localhost:3306/tourmade_shop" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="2" />
		<property name="minIdle" value="1" /> 
		<property name="maxActive" value="20" />
		
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		
		  <!-- 验证连接有效与否的SQL，不同的数据配置不同 --> 
		
		<property name="validationQuery" value="SELECT 'x' from dual " />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="typeAliasesPackage" value="com.tourmade.shop.entity" />
		<!-- <property name="plugins" ref="paginationInterceptor"/> -->
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" autowire="byName">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
		<!--<constructor-arg index="1" value="BATCH"></constructor-arg>-->
	</bean>
	
	<bean id="baseDao" class="com.tourmade.shop.common.framework.util.MybatisDaoImpl" autowire="byName">
		<property name="sqlSession" ref="sqlSession"></property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tourmade.shop.mapper" />
    </bean>
    
    <!-- 通用事务配置 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource"><ref local="dataSource" /></property>
	</bean>
</beans>